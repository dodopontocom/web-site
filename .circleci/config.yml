version: 2.1

defaults: &defaults
  working_directory: /root/app
gcp-image: &gcp-image
  docker:
    - image: google/cloud-sdk
tf-image: &tf-image
  docker:
    - image: hashicorp/terraform:light

activate-sa: &activate-sa
  - run:
      name: "Activate SA to the Project"
      command: |
        for v in "$(cat .circleci/cicd-definitions.sh | grep -v ^#)"; do echo "${v}" >> ${BASH_ENV}; done
        source ${BASH_ENV}
        echo ${DODRONES_GCP_MY_LABS_SA} > ${GCLOUD_JSON_KEY_PATH}
        gcloud auth activate-service-account --key-file=${GCLOUD_JSON_KEY_PATH}
        gcloud config set project ${GCLOUD_PROJECT_ID}
get-credentials: &get-credentials
    - run:
        name: "Get Cluster Credentials"
        command: |
          for v in "$(cat .circleci/cicd-definitions.sh | grep -v ^#)"; do echo "${v}" >> ${BASH_ENV}; done
          source ${BASH_ENV}
          gcloud container clusters get-credentials ${TF_VAR_cluster_name} --zone ${TF_VAR_zone}
revoke-sa: &revoke-sa
  - run:
      name: "Revoke SA"
      command: |
        for v in "$(cat .circleci/cicd-definitions.sh | grep -v ^#)"; do echo "${v}" >> ${BASH_ENV}; done
        echo ${DODRONES_GCP_MY_LABS_SA} > ${GCLOUD_JSON_KEY_PATH}
        echo "${GCLOUD_JSON_KEY_PATH}" grep "client_email" | awk '{print $2}' | grep -o '".*"' | sed 's/"//g'
        gcloud auth revoke devops-sa@terraform-gcp-lab.iam.gserviceaccount.com

only-releasable: &only-releasable
  filters:
    branches:
      only:
        - develop
        - master
non-releasable: &non-releasable
  filters:
    branches:
      ignore:
        - develop
        - master

jobs:
  Prepare Credentials:
    <<: *defaults
    <<: *gcp-image
    steps:
      - checkout
      - <<: *activate-sa

  GCP GKE Node Pool Creation:
    <<: *defaults
    <<: *tf-image
    steps:
      - checkout
      - run:
          name: "GCP GKE Node Pool Creation"
          command: |
            for v in "$(cat .circleci/cicd-definitions.sh | grep -v ^#)"; do echo "${v}" >> ${BASH_ENV}; done
            source ${BASH_ENV}
            echo ${DODRONES_GCP_MY_LABS_SA} > ${TF_VAR_key}
            cd cloud/terraform
            terraform init -backend-config="bucket=${TF_VAR_gcp_bucket}" -backend-config="prefix=terraform"
            terraform plan
            terraform apply --auto-approve  
  GCP Deploy App:
    <<: *defaults
    <<: *gcp-image
    steps:
      - checkout
      - <<: *activate-sa
      - <<: *get-credentials
      - run:
          name: "GCP Deploy App"
          command: |
            kubectl apply -f cloud/k8s/app-deployment.yaml
            kubectl apply -f cloud/k8s/app-load-balancer-service.yaml
            gcloud container clusters list --filter name:${TF_VAR_cluster_name} --format='value(name)'
            while [ "$(kubectl get services -l label-key='deployment-dev' -o jsonpath='{.items[0].status.loadBalancer.ingress[0].ip}')" == "" ]; do
              echo "[$(date +%H:%M:%S)]Getting External IP... [pending]"
              sleep 10
            done
            kubectl get services -l label-key='deployment-dev' -o jsonpath='{.items[0].status.loadBalancer.ingress[0].ip}'
workflows:
  version: 2.1
  
  gcloud_workflow:
    jobs:
      - Prepare Credentials
      - GCP GKE Node Pool Creation
      - GCP Deploy App:
          requires:
            - GCP GKE Node Pool Creation